/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hipert.hg.gui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.File;
import java.io.IOException;
import java.text.NumberFormat;
import java.util.LinkedList;

import javax.swing.ButtonGroup;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFormattedTextField;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.swing.text.NumberFormatter;

import hipert.hg.XMLParser.DAG;
import hipert.hg.XMLParser.Node;
import hipert.hg.XMLParser.XMLGenerator;
import hipert.hg.XMLParser.XMLModifier;
import hipert.hg.modelToCode.DagToCode;

/**
 *
 * @author LPC
 */
public class hgGUI extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public hgGUI() {
        initComponents();    
        setPanelLoadDAGComponents();
    }
    
    public void setPanelLoadDAGComponents(){
    	ImageIcon imgIcon,imgHeader;
    	imgIcon = new ImageIcon("./imgs/icon_hipert.png");
		imgHeader = new ImageIcon("./imgs/logo_hipert2.png");
		this.setIconImage(imgIcon.getImage());
		this.setTitle("HipertLab Code generator");
		labelIconHeader.setIcon(imgHeader);
		
        rbPrem.setActionCommand("prem");
        rbSparse.setActionCommand("sparse");
   
        //PREMRB LISTENER
        rbPrem.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
            	txtSparse.setEnabled(false);
            }
        });
        
        //SPARSERB LISTENER
        rbSparse.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
            	txtSparse.setEnabled(true);
            }
        });
        
        //txtSparse only numbers
        txtSparse.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent e) {
              char c = e.getKeyChar();
              if (!((c >= '0') && (c <= '9') && (txtSparse.getText().length()<2) ||
                 (c == KeyEvent.VK_BACK_SPACE) ||
                 (c == KeyEvent.VK_DELETE))) {
                getToolkit().beep();
                e.consume();
              }
            }
          });
        pack();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        groupMemAccess = new javax.swing.ButtonGroup();
        tabPanel = new javax.swing.JTabbedPane();
        panteDagGenerator = new javax.swing.JPanel();
        panelElementsTab1 = new javax.swing.JPanel();
        bGenerateDag = new javax.swing.JButton();
        lstDagGenerated = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        panelTextFields = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jTextField10 = new javax.swing.JTextField();
        jTextField11 = new javax.swing.JTextField();
        panelTabModify = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstDagModify = new javax.swing.JList<>();
        bLoadToModify = new javax.swing.JButton();
        txtPeriod = new javax.swing.JTextField();
        txtDeadline = new javax.swing.JTextField();
        txtPriority = new javax.swing.JTextField();
        txtMap = new javax.swing.JTextField();
        txtMIET = new javax.swing.JTextField();
        txtMEET = new javax.swing.JTextField();
        txtMAET = new javax.swing.JTextField();
        txtMEM = new javax.swing.JTextField();
        comboMem = new javax.swing.JComboBox<>();
        bApplyChanges = new javax.swing.JButton();
        labelDagModify = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        panelCodeGenerator = new javax.swing.JPanel();
        scrollDagLoad = new javax.swing.JScrollPane();
        lstDagLoaded = new javax.swing.JList<>();
        bLoadDag = new javax.swing.JButton();
        bGenerateCode = new javax.swing.JButton();
        panelRadioButtons = new javax.swing.JPanel();
        rbPrem = new javax.swing.JRadioButton();
        rbSparse = new javax.swing.JRadioButton();
        txtSparse = new javax.swing.JTextField();
        bApplyMemAccess = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstReadyDAG = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        labelIconHeader = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tabPanel.setPreferredSize(new java.awt.Dimension(695, 364));

        panteDagGenerator.setPreferredSize(new java.awt.Dimension(695, 279));

        bGenerateDag.setText("Generate DAG");

        lstDagGenerated.setViewportView(jList1);

        jTextField1.setColumns(8);

        jTextField3.setColumns(8);

        jTextField5.setColumns(8);

        jTextField2.setColumns(8);

        jTextField4.setColumns(8);

        jTextField6.setColumns(8);
        
        jTextField8.setColumns(8);

        jTextField9.setColumns(8);

        jTextField10.setColumns(8);

        jTextField11.setColumns(8);

        javax.swing.GroupLayout panelTextFieldsLayout = new javax.swing.GroupLayout(panelTextFields);
        panelTextFields.setLayout(panelTextFieldsLayout);
        panelTextFieldsLayout.setHorizontalGroup(
            panelTextFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTextFieldsLayout.createSequentialGroup()
                .addGroup(panelTextFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTextFieldsLayout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addGroup(panelTextFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelTextFieldsLayout.createSequentialGroup()
                                .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelTextFieldsLayout.createSequentialGroup()
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelTextFieldsLayout.createSequentialGroup()
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(panelTextFieldsLayout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addGroup(panelTextFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelTextFieldsLayout.createSequentialGroup()
                                .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 160, Short.MAX_VALUE)
                                .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelTextFieldsLayout.createSequentialGroup()
                                .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
            .addComponent(jSeparator1)
        );
        panelTextFieldsLayout.setVerticalGroup(
            panelTextFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTextFieldsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelTextFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelTextFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelTextFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelTextFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(panelTextFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelElementsTab1Layout = new javax.swing.GroupLayout(panelElementsTab1);
        panelElementsTab1.setLayout(panelElementsTab1Layout);
        panelElementsTab1Layout.setHorizontalGroup(
            panelElementsTab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelElementsTab1Layout.createSequentialGroup()
                .addGroup(panelElementsTab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelElementsTab1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bGenerateDag, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(136, 136, 136))
                    .addGroup(panelElementsTab1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(panelTextFields, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(lstDagGenerated, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelElementsTab1Layout.setVerticalGroup(
            panelElementsTab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelElementsTab1Layout.createSequentialGroup()
                .addGroup(panelElementsTab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelElementsTab1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(panelTextFields, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(bGenerateDag, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lstDagGenerated))
                .addContainerGap())
        );

        javax.swing.GroupLayout panteDagGeneratorLayout = new javax.swing.GroupLayout(panteDagGenerator);
        panteDagGenerator.setLayout(panteDagGeneratorLayout);
        panteDagGeneratorLayout.setHorizontalGroup(
            panteDagGeneratorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelElementsTab1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panteDagGeneratorLayout.setVerticalGroup(
            panteDagGeneratorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelElementsTab1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        tabPanel.addTab("DAG Generator", panteDagGenerator);

        lstDagModify.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstDagModify.setSelectionBackground(new java.awt.Color(102, 255, 255));
        lstDagModify.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jScrollPane1.setViewportView(lstDagModify);

        bLoadToModify.setText("Load DAG");
        bLoadToModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bLoadToModifyActionPerformed(evt);
            }
        });

        txtPeriod.setColumns(8);

        txtDeadline.setColumns(8);

        txtPriority.setColumns(8);

        txtMap.setColumns(8);

        txtMIET.setColumns(8);

        txtMEET.setColumns(8);

        txtMAET.setColumns(8);

        txtMEM.setColumns(8);

        comboMem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "B", "KB", "MB" }));
   

        bApplyChanges.setText("Apply Changes");
        bApplyChanges.setEnabled(false);
        bApplyChanges.setMaximumSize(new java.awt.Dimension(79, 23));
        bApplyChanges.setMinimumSize(new java.awt.Dimension(79, 23));
        bApplyChanges.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
					bApplyChangesActionPerformed(evt);
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
            }
        });

        jLabel2.setText("Period");

        jLabel3.setText("Dedadline");

        jLabel4.setText("Priority");

        jLabel5.setText("Core map");

        jLabel6.setText("MIET");

        jLabel7.setText("MEET");

        jLabel8.setText("MAET");

        jLabel9.setText("MEM");

        jLabel10.setText("DAG Properties");

        jLabel11.setText("Node properties");

        javax.swing.GroupLayout panelTabModifyLayout = new javax.swing.GroupLayout(panelTabModify);
        panelTabModify.setLayout(panelTabModifyLayout);
        panelTabModifyLayout.setHorizontalGroup(
            panelTabModifyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTabModifyLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(labelDagModify)
                .addGap(148, 692, Short.MAX_VALUE))
            .addGroup(panelTabModifyLayout.createSequentialGroup()
                .addGroup(panelTabModifyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelTabModifyLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelTabModifyLayout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addComponent(bLoadToModify, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 120, Short.MAX_VALUE)
                .addGroup(panelTabModifyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTabModifyLayout.createSequentialGroup()
                        .addGroup(panelTabModifyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTabModifyLayout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtMap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTabModifyLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtDeadline, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTabModifyLayout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtPriority, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTabModifyLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtPeriod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(26, 26, 26)
                        .addGroup(panelTabModifyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelTabModifyLayout.createSequentialGroup()
                                .addGroup(panelTabModifyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(panelTabModifyLayout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtMIET, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(panelTabModifyLayout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtMEET, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(panelTabModifyLayout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtMAET, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(panelTabModifyLayout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtMEM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboMem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelTabModifyLayout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(jLabel11)))
                        .addGap(12, 12, 12))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTabModifyLayout.createSequentialGroup()
                        .addComponent(bApplyChanges, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(201, 201, 201))))
        );
        panelTabModifyLayout.setVerticalGroup(
            panelTabModifyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTabModifyLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(labelDagModify)
                .addGroup(panelTabModifyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelTabModifyLayout.createSequentialGroup()
                        .addGroup(panelTabModifyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(panelTabModifyLayout.createSequentialGroup()
                                .addGap(53, 53, 53)
                                .addGroup(panelTabModifyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtMIET, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6))
                                .addGap(18, 18, 18)
                                .addGroup(panelTabModifyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtMEET, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7))
                                .addGap(18, 18, 18)
                                .addGroup(panelTabModifyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtMAET, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8))
                                .addGap(18, 18, 18)
                                .addGroup(panelTabModifyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtMEM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(comboMem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9))
                                .addGap(0, 85, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelTabModifyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bLoadToModify)
                            .addComponent(bApplyChanges, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelTabModifyLayout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(panelTabModifyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11))
                        .addGap(26, 26, 26)
                        .addGroup(panelTabModifyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPeriod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(panelTabModifyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDeadline, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(panelTabModifyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPriority, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(panelTabModifyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        tabPanel.addTab("Modify DAG", panelTabModify);

        lstDagLoaded.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstDagLoaded.setSelectionBackground(new java.awt.Color(102, 255, 255));
        lstDagLoaded.setSelectionForeground(new java.awt.Color(0, 0, 0));
        scrollDagLoad.setViewportView(lstDagLoaded);

        bLoadDag.setText("Load DAG Files");
        bLoadDag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bLoadDagActionPerformed(evt);
            }
        });

        bGenerateCode.setText("Generate Code");
        bGenerateCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bGenerateCodeActionPerformed(evt);
            }
        });

        panelRadioButtons.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        groupMemAccess.add(rbPrem);
        rbPrem.setSelected(true);
        rbPrem.setText("PREM");
        rbPrem.setActionCommand("");

        groupMemAccess.add(rbSparse);
        rbSparse.setText("Sparse");
        rbSparse.setActionCommand("");

        txtSparse.setText("8");
        txtSparse.setEnabled(false);

        bApplyMemAccess.setText("Apply");
        bApplyMemAccess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bApplyMemAccessActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelRadioButtonsLayout = new javax.swing.GroupLayout(panelRadioButtons);
        panelRadioButtons.setLayout(panelRadioButtonsLayout);
        panelRadioButtonsLayout.setHorizontalGroup(
            panelRadioButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRadioButtonsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelRadioButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbPrem)
                    .addComponent(rbSparse))
                .addGap(18, 18, 18)
                .addGroup(panelRadioButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSparse, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelRadioButtonsLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(bApplyMemAccess)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        panelRadioButtonsLayout.setVerticalGroup(
            panelRadioButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRadioButtonsLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(rbPrem)
                .addGap(18, 18, 18)
                .addGroup(panelRadioButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbSparse)
                    .addComponent(txtSparse, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bApplyMemAccess)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lstReadyDAG.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(lstReadyDAG);

        jLabel1.setText("Ready DAGs");

        javax.swing.GroupLayout panelCodeGeneratorLayout = new javax.swing.GroupLayout(panelCodeGenerator);
        panelCodeGenerator.setLayout(panelCodeGeneratorLayout);
        panelCodeGeneratorLayout.setHorizontalGroup(
            panelCodeGeneratorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCodeGeneratorLayout.createSequentialGroup()
                .addGroup(panelCodeGeneratorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelCodeGeneratorLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(scrollDagLoad, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, Short.MAX_VALUE))
                    .addGroup(panelCodeGeneratorLayout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(bLoadDag)))
                .addGroup(panelCodeGeneratorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelCodeGeneratorLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(panelCodeGeneratorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1)
                            .addComponent(panelRadioButtons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(91, 91, 91))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCodeGeneratorLayout.createSequentialGroup()
                        .addComponent(bGenerateCode)
                        .addGap(151, 151, 151))))
        );
        panelCodeGeneratorLayout.setVerticalGroup(
            panelCodeGeneratorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCodeGeneratorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelCodeGeneratorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelCodeGeneratorLayout.createSequentialGroup()
                        .addComponent(panelRadioButtons, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(scrollDagLoad))
                .addGap(18, 18, 18)
                .addGroup(panelCodeGeneratorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bLoadDag, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bGenerateCode, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        tabPanel.addTab("Code Generator", panelCodeGenerator);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(labelIconHeader, javax.swing.GroupLayout.DEFAULT_SIZE, 728, Short.MAX_VALUE))
                    .addComponent(tabPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelIconHeader)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(tabPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /************************************************************PANEL GENERATE DAG***************************************************************/
 

	class applyGenerationHandler implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			String memory_access = groupMemAccess.getSelection().getActionCommand();
			//System.out.println(lstDagLoaded.getModel().getElementAt(lstDagLoaded.getSelectedIndex()));
		}
	}
	
	class acceptGenerationHandler implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			//JOptionPane.showMessageDialog(null, "Code Generated", "Code Generator", JOptionPane.INFORMATION_MESSAGE);
	        //new XMLGenerator(dagFiles,memory_access);
	        //new DagToCode();
			//setVisible(false);
		}
	}
	
    /*******************************************************************************************************************************************/

    /************************************************************PANEL MODIFY DAG***************************************************************/
	
	//BUTTON LOAD DAG TO MODIFY
    boolean firstLoad=true;
    MouseListener lastListener;
    XMLModifier xmlgen;
    File fileModify;
    private void bLoadToModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bLoadToModifyActionPerformed
    	fileModify=MethodInterface.loadFile(this,false);
    	if(fileModify!=null){
    		xmlgen=new XMLModifier();
	        LinkedList<Node> nodes;
	        DAG dag=new DAG();

	        xmlgen.readDOTFile(fileModify.toString());
	        nodes=(LinkedList<Node>) xmlgen.getNodes().clone();
	        dag=xmlgen.getDag();
	    	DefaultListModel modelDagModify = new DefaultListModel();
	    	lstDagModify.setModel(modelDagModify);
	    	bApplyChanges.setEnabled(true);
	    	
	    	labelDagModify.setText(fileModify.getName());
	        for(Node node: nodes){
	        	modelDagModify.addElement("Node-"+node.getNodeID());
	        }
	        Integer period=dag.getPeriod();
	        Integer deadline=dag.getDeadline();
	        Integer priority=dag.getPriority();
	        Integer map=dag.getMap();
	    	txtPeriod.setText(period.toString());
	    	txtDeadline.setText(deadline.toString());
	    	txtPriority.setText(priority.toString());
	    	txtMap.setText(map.toString());
	    	if(firstLoad){
	    		firstLoad=false;
	    		lastListener=new listModifyListener(nodes);
		        lstDagModify.addMouseListener(lastListener);
	    	}else{
	    		lstDagModify.removeMouseListener(lastListener);
	    		lastListener=new listModifyListener(nodes);
		        lstDagModify.addMouseListener(lastListener);
	    	}
	    	
    	}   
    }//GEN-LAST:event_bLoadToModifyActionPerformed
    
    //LIST NODE TO MODIFY LISTENER
    private class listModifyListener implements MouseListener {
        private  LinkedList<Node> nodes;

        public listModifyListener(LinkedList<Node> nodesP) {
        	this.nodes=new LinkedList<Node>();
            this.nodes = (LinkedList<Node>) nodesP.clone();
        }
        
		@Override
        public void mouseClicked(MouseEvent evt) {
	        JList list = (JList)evt.getSource();
		    int index = list.locationToIndex(evt.getPoint());
		    if(index>=0){
			    index = list.locationToIndex(evt.getPoint());
		    	txtMIET.setText(String.valueOf(this.nodes.get(index).getWcet()));
		    	txtMEET.setText(String.valueOf(this.nodes.get(index).getIwcet()));
		    	txtMAET.setText(String.valueOf(this.nodes.get(index).getMaet()));
		    	txtMEM.setText(String.valueOf(this.nodes.get(index).getMem_access()));
		    	comboMem.setSelectedItem(this.nodes.get(index).getMem_unit());
		    }
	    }

		@Override
		public void mouseEntered(MouseEvent e) {
			// TODO Auto-generated method stub
			
		}
		@Override
		public void mouseExited(MouseEvent e) {
			// TODO Auto-generated method stub
			
		}
		@Override
		public void mousePressed(MouseEvent e) {
			// TODO Auto-generated method stub
			
		}
		@Override
		public void mouseReleased(MouseEvent e) {
			// TODO Auto-generated method stub
			
		}
    }
    
    //BUTTON SAVE DAG MODIFIED
    private void bApplyChangesActionPerformed(java.awt.event.ActionEvent evt) throws IOException {//GEN-FIRST:event_bApplyChangesActionPerformed
	    	DAG dag=new DAG();
	    	if(lstDagModify.getSelectedValue()==null){
				JOptionPane.showMessageDialog(null, "Please choose a node", "Code Generator", JOptionPane.INFORMATION_MESSAGE);
	    	}else{
		    	xmlgen.modifyXML(fileModify,lstDagModify.getSelectedValue().replace("Node-", ""),
		    					txtPeriod.getText().toString(),txtDeadline.getText().toString(),
		    					txtPriority.getText().toString(),txtMap.getText().toString(),
		    					txtMIET.getText().toString(),txtMEET.getText().toString(),
		    					txtMAET.getText().toString(),txtMEM.getText().toString(),
		    					comboMem.getSelectedItem().toString(),lstDagModify.getSelectedIndex());
				JOptionPane.showMessageDialog(null, "File modified", "Code Generator", JOptionPane.INFORMATION_MESSAGE);
				//reload file
				
	    	}
	    }//GEN-LAST:event_bApplyChangesActionPerformed
	
    /*******************************************************************************************************************************************/

    /************************************************************PANEL GENERATE CODE************************************************************/
	
    //LOAD BUTTON LISTENER && LIST LISTENER
	private void bLoadDagActionPerformed(java.awt.event.ActionEvent evt) {                                         
        File[] files=MethodInterface.loadFiles(this,true);
    	if(files!=null)
    		refreshDAGFiles(files,lstDagLoaded);

    	lstDagLoaded.addMouseListener(new MouseAdapter() {
		    public void mouseClicked(MouseEvent evt) {
		        JList list = (JList)evt.getSource();
			    int index = list.locationToIndex(evt.getPoint());
			    if(index>=0){
					if (evt.getClickCount() == 2) {
					    index = list.locationToIndex(evt.getPoint());
					    Runtime rt = Runtime.getRuntime();
						try {
							Process pr = rt.exec("graphviz/bin/dot.exe "
							+ "-Tpng dags/"+list.getSelectedValue().toString()
							+ " -o dagToPNG/"+list.getSelectedValue().toString().replace(".dot", ".png"));
							new ImageDag("dagToPNG/"+list.getSelectedValue().toString().replace(".dot", ".png"));
						} catch (IOException e) {
							e.printStackTrace();
						}
					}
			    }
		    }
		});
    }
	
	//APPLY BUTTON MEMORY ACCESS
    DefaultListModel modelReadyDag = new DefaultListModel();
    private void bApplyMemAccessActionPerformed(java.awt.event.ActionEvent evt) {                                                
		if(lstDagLoaded.getSelectedIndex()<0){
			JOptionPane.showMessageDialog(null, "Choose a DAG", "Code Generated", JOptionPane.INFORMATION_MESSAGE);
		}else{
			String memory_access = groupMemAccess.getSelection().getActionCommand();
	    	lstReadyDAG.setModel(modelReadyDag);
	    	if(memory_access=="prem")
	    		modelReadyDag.addElement(lstDagLoaded.getSelectedValue().toString()+"-"+memory_access);
	    	else if (memory_access=="sparse")
	    		modelReadyDag.addElement(lstDagLoaded.getSelectedValue().toString()+"-"+memory_access+"-"+txtSparse.getText());

		}
    }

    //GENERATE CODE BUTTON
    private void bGenerateCodeActionPerformed(java.awt.event.ActionEvent evt) {                                              
    	if(lstReadyDAG.getModel().getSize()<=0){
			JOptionPane.showMessageDialog(null, "There is no any DAG loaded", "Code Generated", JOptionPane.INFORMATION_MESSAGE);
    	}else{
    		String memory_access = groupMemAccess.getSelection().getActionCommand();
			JOptionPane.showMessageDialog(null, "Code Generated", "Code Generator", JOptionPane.INFORMATION_MESSAGE);
	        new XMLGenerator(packDags());
	        new DagToCode();
    	}
    }
    
    //FUNCTION TO PREPARE THE DAGS
	private DAG[] packDags() {
		DAG dags[] = new DAG[lstReadyDAG.getModel().getSize()];
		for(int i=0;i<lstReadyDAG.getModel().getSize();i++){
			String filePath="dags/"+lstReadyDAG.getModel().getElementAt(i).split("-")[0];
			String mem_access=lstReadyDAG.getModel().getElementAt(i).split("-")[1];
			if(mem_access.equals("prem")){
				dags[i]=new DAG(filePath,mem_access);
			}
			else if (mem_access.equals("sparse")){
				int step=Integer.parseInt(lstReadyDAG.getModel().getElementAt(i).split("-")[2]);
				dags[i]=new DAG(filePath,mem_access,step);
			}
		}
		return dags;
	}
	
	//FUNCTION TO REFRESH AVAILABLE DAGS
    private void refreshDAGFiles(File[] files,JList lst) {
		DefaultListModel model = new DefaultListModel();
    	lst.removeAll();
    	lst.setModel(model);
    	for(File f : files){
            model.addElement(f.getName());
    	}
    }
    /*******************************************************************************************************************************************/

	/**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(hgGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(hgGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(hgGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(hgGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new hgGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bApplyChanges;
    private javax.swing.JButton bApplyMemAccess;
    private javax.swing.JButton bGenerateCode;
    private javax.swing.JButton bGenerateDag;
    private javax.swing.JButton bLoadDag;
    private javax.swing.JButton bLoadToModify;
    private javax.swing.JComboBox<String> comboMem;
    private javax.swing.ButtonGroup groupMemAccess;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JLabel labelDagModify;
    private javax.swing.JLabel labelIconHeader;
    private javax.swing.JScrollPane lstDagGenerated;
    private javax.swing.JList<String> lstDagLoaded;
    private javax.swing.JList<String> lstDagModify;
    private javax.swing.JList<String> lstReadyDAG;
    private javax.swing.JPanel panelCodeGenerator;
    private javax.swing.JPanel panelElementsTab1;
    private javax.swing.JPanel panelRadioButtons;
    private javax.swing.JPanel panelTabModify;
    private javax.swing.JPanel panelTextFields;
    private javax.swing.JPanel panteDagGenerator;
    private javax.swing.JRadioButton rbPrem;
    private javax.swing.JRadioButton rbSparse;
    private javax.swing.JScrollPane scrollDagLoad;
    private javax.swing.JTabbedPane tabPanel;
    private javax.swing.JTextField txtDeadline;
    private javax.swing.JTextField txtMAET;
    private javax.swing.JTextField txtMEET;
    private javax.swing.JTextField txtMEM;
    private javax.swing.JTextField txtMIET;
    private javax.swing.JTextField txtMap;
    private javax.swing.JTextField txtPeriod;
    private javax.swing.JTextField txtPriority;
    private javax.swing.JTextField txtSparse;
    // End of variables declaration//GEN-END:variables
}
